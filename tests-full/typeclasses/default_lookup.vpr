// compile: {vprc} {input} -l -a -c
// link: {cc} {input}.o {runtime} -o {input}.bin
// run: {input}.bin 5

module main.tc
{
    typeclass test(t : type) {
        function action(arg : t) -> t;
    };
}

module main
{
    let int32 = sized_int(32);
    let wrapped_int32 = struct {
        let x : int32;
    };

    function calculate(arg : wrapped_int32) {
        return wrapped_int32{ arg.x * 3 + 1 };
    }

    default instance tc.test(wrapped_int32) {
        function action(arg) {
            return calculate(arg);
        }
    };

    let entry = lambda(arg : int32) {
        return default(tc.test(wrapped_int32)).action(wrapped_int32{ arg }).x - 16;
    };
}

// vim: filetype=cpp

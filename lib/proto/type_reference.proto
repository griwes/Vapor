/**
 * Vapor Compiler Licence
 *
 * Copyright © 2018-2019 Michał "Griwes" Dominiak
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation is required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 **/

syntax = "proto3";

package reaver.vapor.proto;

import "range.proto";

message parameter
{
    string name = 1;
    type_reference type = 2;
    range range = 3;
}

message function_signature
{
    type_reference return_type = 1;
    repeated parameter parameters = 2;

    bool is_member = 32;
    bool has_vtable_id = 33;
    int64 vtable_id = 34;
}

message sized_integer
{
    int64 size = 1;
}

message typeclass_type
{
    repeated type_reference parameters = 1;
}

message typeclass_instance_type
{
    user_defined_reference typeclass = 1;
    repeated type_reference arguments = 2;
}

message parameter_archetype
{
    string name = 1;
}

enum simple_builtin {
    type_ = 0;
    integer = 64;
    boolean = 65;
}

message user_defined_reference
{
    repeated string module = 1;
    string name = 2;
}

message type_reference
{
    oneof details {
        simple_builtin builtin = 1;
        sized_integer sized_int = 2;
        typeclass_type typeclass = 3;

        user_defined_reference user_defined = 65;
        typeclass_instance_type typeclass_instance_type = 66;
        parameter_archetype archetype = 67;
    }
}

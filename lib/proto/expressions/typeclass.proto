/**
 * Vapor Compiler Licence
 *
 * Copyright © 2019 Michał "Griwes" Dominiak
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation is required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 **/

syntax = "proto3";

package reaver.vapor.proto;

import "range.proto";
import "type_reference.proto";
import "types/overload_set.proto";

message typeclass
{
    range range = 1;
    repeated parameter parameters = 2;
    map<string, overload_set_type> overload_sets = 3;
}

// typeclass_instance could contain a reference to its typeclass and a list of arguments
// but that information is already readily available in the type of the entity that is being loaded
// when this kind of an object is encountered
// so instead of this dance, that type will be used to pass that information around, to avoid duplication
message typeclass_instance
{
    range range = 1;
}
